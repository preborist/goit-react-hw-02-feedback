{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Feedback/Feedback.js","components/Statictics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","option","name","type","onClick","Feedback","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","handleClick","e","target","setState","prev","countTotalFeedback","countPositivePercentageFeedback","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TA2BeA,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIC,UAAU,kBAAd,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEF,UAAU,0BACVG,KAAMD,EACNE,KAAK,SAELC,QAASN,EALX,SAOGG,GAHIA,SCQAI,G,MAfE,SAAC,GAAyB,IAAvBP,EAAsB,EAAtBA,gBAClB,OACE,mCACE,cAAC,EAAD,CACED,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBA,QCeVQ,G,MArBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAIZ,UAAU,aAAd,wBACA,+BACE,wCAAWQ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,eCGSC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MCGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCiD3BC,E,4MA7CbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,YAAc,SAAAC,GACZ,IAAMlB,EAAOkB,EAAEC,OAAOnB,KACtB,EAAKoB,UAAS,SAAAC,GAAI,sBACfrB,EAAOqB,EAAKrB,GAAQ,O,EAIzBsB,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBX,KADiB,EACXC,QADW,EACFC,K,EAIzBgB,gCAAkC,WAChC,GAAI,EAAKP,MAAMX,KACb,OAAOmB,KAAKC,MAAO,EAAKT,MAAMX,KAAO,EAAKiB,qBAAwB,M,4CAItE,WAAU,IAAD,EACwBI,KAAKV,MAA5BX,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,eAAC,EAAD,CAASI,MAAM,wBAAf,UACE,cAAC,EAAD,CAAUf,gBAAiB8B,KAAKT,cAC/BS,KAAKJ,qBACJ,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,KAAKJ,qBACZb,mBAAoBiB,KAAKH,oCAG3B,cAAC,EAAD,CAAcT,QAAQ,6B,GAvCda,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0a7563a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FeedbackOptions.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul className=\"FeedbackOptions\">\r\n      {options.map(option => (\r\n        <button\r\n          className=\"FeedbackOptions__button\"\r\n          name={option}\r\n          type=\"button\"\r\n          key={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport './Feedback.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Feedback = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <FeedbackOptions\r\n        options={['good', 'neutral', 'bad']}\r\n        onLeaveFeedback={onLeaveFeedback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFeedback.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Feedback;\r\n","import React from 'react';\r\nimport './Statistics.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <h2 className=\"Statistics\">Statistics</h2>\r\n    <ul>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Feedback from './components/Feedback';\nimport Statistics from './components/Statictics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = e => {\n    const name = e.target.name;\n    this.setState(prev => ({\n      [name]: prev[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositivePercentageFeedback = () => {\n    if (this.state.good) {\n      return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n    }\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Section title=\"Please leave feedback\">\n        <Feedback onLeaveFeedback={this.handleClick} />\n        {this.countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositivePercentageFeedback()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}